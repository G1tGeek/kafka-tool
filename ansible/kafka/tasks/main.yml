---
- name: Update the system
  apt:
    update_cache: yes

- name: Ensure Kafka dependencies are installed
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - openjdk-11-jdk

- name: Download Kafka
  get_url:
    url: "{{ kafka_download_url }}"
    dest: /tmp/kafka.tgz

- name: Extract Kafka
  unarchive:
    src: /tmp/kafka.tgz
    dest: /opt/
    remote_src: yes

- name: Clean Kafka storage directory (if exists)
  file:
    path: /tmp/kraft-combined-logs
    state: absent

- name: Set sequential broker ID based on host inventory order
  set_fact:
    node_id: "{{ ansible_play_hosts.index(inventory_hostname) + 1 }}"

- name: Debug Node ID
  debug:
    msg: "Node ID for {{ inventory_hostname }}: {{ node_id }}"

- name: Generate UUID for Kafka Cluster
  command: bin/kafka-storage.sh random-uuid
  args:
    chdir: /opt/kafka_{{ kafka_version }}
  register: uuid_output

- name: Debug Kafka Cluster ID
  debug:
    msg: "Kafka Cluster ID: {{ uuid_output.stdout }}"

- name: Generate Kafka server.properties from template
  become: true
  template:
    src: server.properties.j2
    dest: /opt/kafka_{{ kafka_version }}/config/kraft/server.properties
  vars:
    node_id: "{{ node_id }}"

- name: Set Kafka Cluster ID
  set_fact:
    kafka_cluster_id: "{{ uuid_output.stdout }}"

- name: Format Kafka storage
  command: >
    bin/kafka-storage.sh format
    -t {{ kafka_cluster_id }}
    -c config/kraft/server.properties
  args:
    chdir: /opt/kafka_{{ kafka_version }}

- name: Create Kafka systemd service file
  become: true
  template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service

- name: Reload systemd
  become: true
  command: systemctl daemon-reload

- name: Enable and start Kafka service
  become: true
  systemd:
    name: kafka
    state: started
    enabled: yes

- name: Wait for Kafka to start
  wait_for:
    host: "{{ kafka_host1 }}"
    port: "{{ kafka_port }}"
    state: started
    delay: 10
    timeout: 60
